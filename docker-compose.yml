version: '2'

volumes:
  testlink_data:
    driver: local
  database:
    driver: local
  prometheus_data: {}
  grafana_data: {}

services:
  mariadb:
    image: mariadb
    container_name: mariadb-testlink
    ports:
      - '3306:3306'
    env_file:
      - .env
    environment:
      - MARIADB_ALLOW_EMPTY_ROOT_PASSWORD=yes
      - MARIADB_DATABASE=bitnami_testlink
      - MARIADB_USER=bn_testlink
    restart: always
    volumes:
      - database:/bitnami/mariadb
      - ./config/mariadb/dump.sql:/docker-entrypoint-initdb.d/dump.sql
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '--silent']
      retries: 20
      timeout: 200s
      interval: 2s

  testlink:
    image: docker.io/bitnami/testlink:1
    container_name: testlink
    ports:
      - '80:8080'
      - '443:8443'
    environment:
      - TESTLINK_DATABASE_HOST=mariadb
      - TESTLINK_DATABASE_PORT_NUMBER=3306
      - TESTLINK_DATABASE_USER=root
      - TESTLINK_DATABASE_NAME=bitnami_testlink
      - ALLOW_EMPTY_PASSWORD=yes
      - TESTLINK_SMTP_HOST=smtp.gmail.com
      - TESTLINK_SMTP_PORT=587
      - TESTLINK_SMTP_USER=${TESTLINK_SMTP_USER}
      - TESTLINK_SMTP_PASSWORD=${TESTLINK_SMTP_USER}
    restart: always
    volumes:
      - 'testlink_data:/bitnami/testlink'
    depends_on:
      mariadb:
        condition: service_healthy

  prometheus:
    image: prom/prometheus:v2.17.1
    container_name: prometheus
    volumes:
      - ./config/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - '9090:9090'
    labels:
      org.label-schema.group: 'monitoring'

  alertmanager:
    image: prom/alertmanager:v0.20.0
    container_name: alertmanager
    volumes:
      - ./config/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    ports:
      - '9093:9093'
    labels:
      org.label-schema.group: 'monitoring'

  grafana:
    image: grafana/grafana:6.7.2
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - '3000:3000'
    labels:
      org.label-schema.group: 'monitoring'

  app:
    container_name: app
    build: .
    environment:
      - TESTLINK_API_KEY=6e204ef53aecd003c19f2a89178ba60b
      - TESTLINK_URL=localhost
      - TESTLINK_URL_PORT=80
      - APP_PORT=8080
    command: npm start
    ports:
      - '8080:8080'
    volumes:
      - .:/usr/app
      - /usr/app/node_modules
